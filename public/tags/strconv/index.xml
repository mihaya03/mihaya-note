<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strconv on mihaya note</title>
    <link>https://mihaya03.github.io/mihaya-note/tags/strconv/</link>
    <description>Recent content in Strconv on mihaya note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 17 Feb 2024 16:13:15 +0900</lastBuildDate>
    <atom:link href="https://mihaya03.github.io/mihaya-note/tags/strconv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go strconv</title>
      <link>https://mihaya03.github.io/mihaya-note/posts/go-atoi/</link>
      <pubDate>Sat, 17 Feb 2024 16:13:15 +0900</pubDate>
      <guid>https://mihaya03.github.io/mihaya-note/posts/go-atoi/</guid>
      <description>strconv 文字列と基本的なデータ型との変換 基本的な使い方 strconv.Atoi(s string) (int, error)&#xA;文字列を整数に変換する strconv.Itoa(i int) string&#xA;整数を文字列に変換 strconv.ParseFloat(s string, bitSize int) (float64, error)&#xA;文字列を浮動小数点型に変換 strconv.FormatFloat(f float64, fmt byte, prec, bitSize int) string&#xA;浮動小数点数を文字列に変換 fmtはフォーマット b: 2進数表記の指数形式 e: 指数形式 f: 通常の小数点形式 g: 数値の有効桁数を基に非指数形式または指数形式を自動選択 precは精度 指定したフォーマットに対応して、小数点以下の桁数、有効数字などを指定する strconv.ParseBool(str string) (bool, error)&#xA;文字列を論理値に変換 bool型と認識される文字列はtrue、false、1、0、t、fなど 参考 strconv </description>
    </item>
  </channel>
</rss>
